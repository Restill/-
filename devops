想搞好 DevOps，我们向你推荐以下七件利器！
1. Git——基本生存技能
我猜有人会说，Git 也需要列出来？可是，只会 commit、push 可不算精通 Git 哦！如何正确解决版本冲突？本地分支、远程分支等等多种让人眼花缭乱的分支应该采用什么样的管理策略？
这个随着 Linux 内核共同发展起来的分布式版本管理工具，为技术人员提供了一个接近完美的分布式版本控制解决方案，也隐藏了不少鲜为人知的秘密，在工作中，擅用 Git 的进阶功能，将为你的 DevOps 之路提供莫大助力。
2. Jenkins——交付流水线即代码
持续交付流水线作为『DevOps』的交付主航道，起着承前启后的关键作用。
Jenkins 是基于Java 开发的一种持续集成工具，用于监控持续重复的工作，助你搭出一条定制化的高效流水线。
3. SonarQube——项目质量持续追踪
软件的代码质量是一个无法量化衡量的指标，是否有方法能尽早发现代码中常见的潜在问题，从而降低代码持续腐化的风险？
这个答案就是：SonarQube，一个集代码静态检查和质量指标可视化的开源工具，并将代码质量门槛添加到交付流水线中，让你的代码质量更加可控。
4. Ansible——基础设施即代码
随着许多企业基础设施云化，获得大量低成本的硬件计算资源不再是什么困难的事情，面对这些日新月异的平台，我们如何进行管理呢？
正如 Ansible 的 Slogan:"Ansible is Simple IT Automation",这个工具可以帮助我们完成自动化部署 App,自动化管理配置项,自动化进行云服务管理。完美实现基础设施自动化管理的常用方式，通过 Ansible 脚本来完成交付流水线的上线部署。
5. Docker——容器化运行环境
这个不需要解释了吧？
6. Prometheus——可视化效率与性能
任何人都不希望在收到用户投诉以后才发现自己运行的服务出现故障，但面对越来越多的服务器和软件，怎样快速把它们统统监控起来呢？
这里我们就要介绍 Prometheus：一款新型的开源监控软件，Prometheus 通过直接或者短时中介网关收集监控数据，在本地存储所有收集到的数据，并且通过定义好的 rules 产生新的时间序列数据或发送警报。同时，Promdash 或者其他使用 API 的客户端可以将采集到的数据可视化。
7. Fluentd——分布式日志管理
除了有效的监控，软件日志同样是发现和及时解决问题的重要途径，但从分散在各个地方的日志文件里查找信息并不容易，如何更有效的进行日志管理呢？
还好我们有 Fluentd 和 Elastic Stack 系列工具，Fluentd 是一个开源的日志收集系统，支持150+个插件，能够将日志收集到 MongoDB , Redis , Amazon S3 等等；Fluent 能够以 JSON 格式来处理日志，具备每天收集 5000+ 台服务器上 5T 的日志数据，每秒处理 50000 条消息的性能。只要通过适当的组合，就能得到一套称手的日志集中管理系统。
